// 逻辑非 ! 逻辑或 || 逻辑与 &&

// 逻辑非 ! 
/**
 *格式: ! 条件A;
 *运算结果: 真变假, 假变真
 *运算过程:
 *先判断条件A是否成立，如果条件A成立，那么结果就为0，即“假”；
 *如果条件A不成立，结果就为1，即“真”
 *使用注意:
 *可以多次连续使用逻辑非运算符
 *!!!0 相当于 (!(!(!0)))，最终结果为1
 */
#include <stdio.h>
int main(){
    // ()优先级高，先计算()里面的内容
    // 10==10为真，所以result = !(1);
    // !代表真变假，假变真，所以结果是假0
    int result = !(10 == 10);
    printf("result = %i\n", result); // 0
}

// 逻辑或 ||
/**
 *格式: 条件A || 条件B;
 *运算结果: 一真则真
 *运算过程:
 *总是先判断“条件A”是否成立
 *如果“条件A”不成立，接着再判断“条件B”是否成立，如果“条件B”成立，结果就为1，即“真”
 *如果“条件A”不成立，“条件B”也不成立，结果就为0，即“假”
 *如果“条件A”成立，不会再去判断“条件B”是否成立，因为逻辑或只要一个为真结果都为真
 *使用注意:
 *“条件A”为真，“条件B”不会被执行
 */
#include <stdio.h>
int main(){
    // 真 || 真
    int result = (10 == 10) || (5 != 1);
    printf("result = %i\n", result); // 1
    // 假 || 真
    result = (10 == 9) || (5 != 1);
    printf("result = %i\n", result); // 1
    // 真 || 假
    result = (10 == 10) || (5 != 5);
    printf("result = %i\n", result); // 1
    // 假 || 假
    result = (10 == 9) || (5 != 5);
    printf("result = %i\n", result); // 0
}

#include <stdio.h>
int main(){
    int a = 10;
    int b = 20;
    // 逻辑或，前面为真，不会继续执行后面
    int result = (a == 10) || (++b);
    printf("result = %i\n", result); // 1
    printf("b = %i\n", b); // 20
}

// 逻辑与 &&
/**
 *格式: 条件A && 条件B;
 *运算结果: 一假则假
 *运算过程:
 *总是先判断“条件A”是否成立。
 *如果“条件A”成立，接着再判断“条件B”是否成立，如果“条件B”也成立，结果就为1，即“真”。
 *如果“条件A”成立，“条件B”不成立，结果就为0，即“假”。
 *如果“条件A”不成立，不会再去判断“条件B”是否成立，因为逻辑与只要一个不为真结果都不为真。
 *使用注意:
 *“条件A”为假，“条件B”不会被执行。
 */
#include <stdio.h>
int main(){
    // 真 && 真
    int result = (10 == 10) && (5 != 1);
    printf("result = %i\n", result); // 1
    // 假 && 真
    result = (10 == 9) && (5 != 1);
    printf("result = %i\n", result); // 0
    // 真 && 假
    result = (10 == 10) && (5 != 5);
    printf("result = %i\n", result); // 0
    // 假 && 假
    result = (10 == 9) && (5 != 5);
    printf("result = %i\n", result); // 0
}

#include <stdio.h>
int main(){
    int a = 10;
    int b = 20;
    // 逻辑与，前面为假，不会继续执行后面
    int result = (a == 9) && (++b);
		// 1（此处应为0，原注释有误，已修正逻辑：a==9为假，所以result为0，但代码中a初始为10，a==9为假，result应为0，且++b不会执行，b仍为20，下面打印b为20）
    printf("result = %i\n", result); 
    // 修正说明：原代码意图是展示短路逻辑，a==9为假，所以&&右侧不会执行，b值不变。
    // 正确的输出应该是：
    // result = 0
    // b = 20
    printf("b = %i\n", b); // 20
    // 上述代码中，由于a初始值为10，a==9为假，所以result为0，且++b不会执行，b保持20。
}
