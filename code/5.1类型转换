强制类型转换(显示转换)
int a = (int)10.5;// 将double转换为int

算数转换
//对占用内存较少的类型做一个“自动类型提升”的操作，先将其转换为当前算数表达式中占用内存高的类型，然后再参与运算
// 当前表达式用1.0占用8个字节，2占用4个字节
// 所以会先将整数类型2转换为double类型之后再计算
double b = 1.0 / 2;

赋值转换
int a = 10.6;// 赋值时左边是什么类型，就会自动将右边转换为什么类型再保存

1.#C语言钟:"强制类型"转换使用 (type) 语法，将一个值显式转换为另一种类型
#include <stdio.h>

int main() {
  
    double num = 10.5;// 将 double 转换为 int（直接截断小数部分）
    int a = (int)num;
    printf("a = %d\n", a);  // 输出: a = 10
    return 0;
}

2.#C语言中:"算数转换"会自动将占用内存较少的类型提升为占用内存较多的类型（如 int → double），然后再进行计算
#include <stdio.h>

int main() {
    // 1.0 是 double 类型，2 是 int 类型、2 会被自动提升为 double 类型，再进行除法运算
    double b = 1.0 / 2;  // 实际计算是 1.0 / 2.0 
    printf("b = %f\n", b);  // 输出: b = 0.500000
    return 0;
}

3.#在赋值时，如果右边的值类型与左边的变量类型不匹配，C 会尝试将右边的值隐式转换为左边的类型
#include <stdio.h>

int main() {
    
    int a = 10.6; // 10.6 是 double 类型，但 a 是 int 类型、10.6 会被隐式转换为 int 类型（截断小数部分）
    printf("a = %d\n", a);  // 输出: a = 10
    return 0;
}
